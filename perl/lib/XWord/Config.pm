package XWord::Config;

use utf8;
use Badger::Class
    version => 0.01,
    debug   => 0,
    base    => 'Badger::Config',
    import  => 'class CLASS',
    utils   => 'UTILS';

#-----------------------------------------------------------------------------
# This loads the extra config definitions in XWord::Config::Local (if it
# exists). The XWord::Config::Local module is generated by the bin/configure
# script.  It defines the $ROOT directory and that's about it.
#-----------------------------------------------------------------------------
use XWord::Config::Loader;

#-----------------------------------------------------------------------
# Declare configuration items. Each of these creates a class accessor
# method for accessing the above package variables in a hygenic manner.
# If you want to add any new configuration items then add a lower case
# entry in here (this becomes the method name, e.g. XWord::Config->foo)
# and an equivalent definition (e.g. our $FOO = ...) somewhere below.
# The Badger::Config base class takes care of the rest.
#-----------------------------------------------------------------------

our $ITEMS = [ qw(
    root
) ];


#-----------------------------------------------------------------------------
# This little bit of Badger::Class magic declares that we can export any
# of these items if a module want to load them as local variables.
#-----------------------------------------------------------------------------
class->exports(
    any => [ map { '$' . uc $_ } @$ITEMS ]
);


1;

=head1 NAME

XWord::Config - configuration module for the Crossword Designer app.

=head1 SYNOPSIS

    package XWord::Config;

    # lookup root directory
    my $root = XWord::Config->root;

=head1 DESCRIPTION

This module is a subclass of the L<Badger::Config> module.  It defines the
configuration data required to bootstrap the back-end system.

Most of the configuration options are in YAML files in the F<config> directory.
The only thing remaining in this module is C<root> which defines the root
directory of the project.

This value (and others) may vary from one machine to the next, or between
different development environments on the same machine.  The
L<XWord::Config::Loader> module is used to load L<XWord::Config::Local>
(if it exists) in which these local values are defined.  The
L<XWord::Config::Local> module is created by the F<bin/configure> script
and should B<NOT> be checkedinto source control.

=head1 METHODS

Each of these methods returns the relevant configuration data defined for
the part of the system that it relates to.

=head2 root

Returns a L<Badger::Filesystem::File> object representing the root directory
of the project.

=head1 AUTHOR

Andy Wardley E<lt>abw@wardley.orgE<gt>.

=head1 COPYRIGHT

Copyright (C) 2020 Andy Wardley.  All Rights Reserved.

=cut
